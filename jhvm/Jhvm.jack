class Jhvm {
  field int _;
  field String _outPath;

  static String DOTASM;
  static String SLASHES;

  constructor Jhvm new()
  {
    return this;
  }

  function void init()
  {
    let DOTASM = ".asm";
    let SLASHES = "/\\";
    return;
  }

  method String setOutputPath(String argument)
  {
    var int l;
    var Array a;

    let l = argument.length();
    let a = argument.bytes();

    if (argument.compare(-3, ".vm",0, 3) = 0) {
      // replace .vm with .asm
      let _outPath = String.new(l+1);
      do Array.copy(_outPath.bytes(), a, l-2);
      do Array.copy(_outPath.bytes()+l-2, DOTASM.bytes()+1, 3);
      do _outPath.setLength(l+1);
    } else {
      // trim any trailing / and append .asm

      do argument.rstrip(SLASHES);
      let l = argument.length();
      let _outPath = String.new(l+4);
      do Array.copy(_outPath.bytes(), a, l);
      do Array.copy(_outPath.bytes()+l, DOTASM.bytes(), 4);
      do _outPath.setLength(l+4);
    }

    return _outPath;

  }

  method void translateFile(String filename)
  {
    do Output.printString("Translating ");
    do Output.printString(filename);
    do Output.println();
    return;
  }
}