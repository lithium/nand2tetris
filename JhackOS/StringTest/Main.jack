// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/StringTest/Main.jack

/** Test program for the OS String class. */
class Main {

    /** Performs several string manipulations and prints their results. */
    function void main() {
        var String s;
        var String i;
        var Array b;
        var Array a;
        var int idx;


        do String.init();
        
        let s = String.new(0); // A zero-capacity string should be supported
        do s.dispose();

        let s = String.new(6); // capacity 6, make sure length 5 will be printed
        let s = s.appendChar(97);
        let s = s.appendChar(98);
        let s = s.appendChar(99);
        let s = s.appendChar(100);
        let s = s.appendChar(101);
        do Output.printString("new,appendChar: ");
        do Output.printString(s);                // new, appendChar: abcde
        do Output.println();
    
        let i = String.new(6);
        do i.setInt(12345);
        do Output.printString("setInt: 12345 == ");
        do Output.printString(i);                // setInt: 12345

        do i.setInt(-32767);
        do Output.printString(",  -32767 == ");
        do Output.printString(i);                // setInt: -32767

        do i.setInt(0);
        do Output.printString(",  0 == ");
        do Output.printString(i);                // setInt: -32767

        do i.setInt(1);
        do Output.printString(",  1 == ");
        do Output.printString(i);                // setInt: -32767
        do Output.println();
        
        do Output.printString("length: ");
        do Output.printInt(s.length());          // length: 5
        do Output.println();
        
        do Output.printString("charAt[2]: ");
        do Output.printInt(s.charAt(2));         // charAt[2]: 99
        do Output.println();
        
        do s.setCharAt(2, 45);
        do Output.printString("setCharAt(2,'-'): ");     
        do Output.printString(s);                // setCharAt(2,'-'): ab-de
        do Output.println();
        
        do s.eraseLastChar();        
        do Output.printString("eraseLastChar: ");     
        do Output.printString(s);                // eraseLastChar: ab-d
        do Output.println();
        
        let s = "456";
        do Output.printString("intValue: 456 == ");
        do Output.printInt(s.intValue());        // intValue: 456
        
        let s = "-32123";
        do Output.printString(",   -32123 == ");
        do Output.printInt(s.intValue());        // intValue: -32123
        do Output.println();
        
        do Output.printString("backSpace: ");
        do Output.printInt(String.backSpace());  // backSpace: 129
        do Output.println();
        
        do Output.printString("doubleQuote: ");
        do Output.printInt(String.doubleQuote());// doubleQuote: 34
        do Output.println();
        
        do Output.printString("newLine: ");
        do Output.printInt(String.newLine());    // newLine: 128
        do Output.println();

        let s = "Foo";

        do Output.printString("equals: true == ");
        if (s.equals("Foo")) {
            do Output.printString("true");
        } else {
            do Output.printString("false");
        }

        do Output.printString("   false == ");
        if (s.equals("Baz")) {
            do Output.printString("true");
        } else {
            do Output.printString("false");
        }
        do Output.println();



        let s = "Foo.Bar";
        let idx = s.indexOfChar(String.ord("."), 0);

        do Output.printString("indexOfChar: 3 == ");
        do Output.printInt(idx);

        let idx = s.indexOf("Bar");
        do Output.printString("   4 == ");
        do Output.printInt(idx);
        do Output.println();

        let b = s.bytes();
        let b[idx+0] = String.ord("Q");
        let b[idx+1] = String.ord("u");
        let b[idx+2] = String.ord("x");
        do Output.printString("bytes: Foo.Qux == ");
        do Output.printString(s);
        do Output.println();

        let idx = s.indexOf("Bar");
        do Output.printString("indexOf: -1 == ");
        do Output.printInt(idx);
        do Output.println();


        let s = "  \tFoobarquuu";
        let idx = s.span(" \t");
        do Output.printString("span: 3 == ");
        do Output.printInt(idx);

        let idx = s.span("F");
        do Output.printString("   0 == ");
        do Output.printInt(idx);
        do Output.println();

        let idx = s.rspan("u");
        do Output.printString("rspan: 3 == ");
        do Output.printInt(idx);

        let idx = s.rspan("z");
        do Output.printString("   0 == ");
        do Output.printInt(idx);
        do Output.println();


        let s = "Foobar";
        let a = s.bytes();
        let i = "barbaz";
        let b = i.bytes();

        let idx = String.strcmp(a, b, 6);
        do Output.printString("String.cmp: -28 == ");
        do Output.printInt(idx);

        let idx = String.strcmp(b, a, 6);
        do Output.printString("  28 == ");
        do Output.printInt(idx);
        do Output.println();

        let idx = s.compare(3, i,0, 3);
        do Output.printString("compare: 0 == ");
        do Output.printInt(idx);
        do Output.println();

        do i.dispose();
        do s.dispose();

        let s = "Foobar";
        let i = String.copy(s);
        do Output.printString("copy: Foobar == ");
        do Output.printString(i);
        do Output.println();

        do i.dispose();

        let i = s.subString(3,3);
        do Output.printString("subString: bar == ");
        do Output.printString(i);
        do Output.println();

        do i.dispose();
        do s.dispose();

        return;
    }

}
