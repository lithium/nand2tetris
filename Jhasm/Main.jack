

class Main {

  function void usage() {
    do Output.printString("Usage: jhasm <file.asm>");
    do Output.println();
    return;
  }

  function String hackFilename(String asmFilename)
  {
    var int idx;
    var String ret;
    var Array b;
    var String const;

    let const = "hack";

    let idx = asmFilename.length() - 4;
    if (String.strcmp(asmFilename+idx, ".asm", 4) = -1) {
      return null;
    }

    let ret = String.new(asmFilename.length()+1);

    let b = ret.bytes();
    do Array.copy(b, asmFilename.bytes(), asmFilename.length());
    do Array.copy(b+idx+1, const.bytes(), 4);
    do ret.setLength(idx+5);

    return ret;
  } 

  function void main() {
    var String inputPath, outputPath;
    var Jhasm jhasm;

    
    do String.init();
    do Jhasm.init();

    // Parse .asm file from command-line arguments
    if (Sys.argumentCount() < 1) {
      do Main.usage();
      return;
    }
    let inputPath = Sys.argument(0);
    let outputPath = Main.hackFilename(inputPath);


    do Output.printString(" IN:");
    do Output.printString(inputPath);
    do Output.println();
    do Output.printString("OUT:");
    do Output.printString(outputPath);
    do Output.println();


    let jhasm = Jhasm.new();
    do jhasm.assemble(inputPath, outputPath);


    return;
  }
  
}